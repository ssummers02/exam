<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAD0AAABDCAYAAAAvSg1YAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA6BJREFUeF7tmduR4jAQRUmBGEiBHAiBGEiBDMiADIiACEiABMiA2p/92x9vHdfc
        raaxPTZSW5qFW9UF4wFbR+qXxOLX7z8N9k76QE/V/X5vDodDs9ls2lf+xna73cO12pQEvd/vW8DL5dIC
        brfbZr1et6+6xv9rUxI0q2nFJPhry+Xy6109Soa+3W7t++v12gJyTS7N62q1at/XpCTo8/n8D5TX0+nU
        GqC6xmdqUxI0YjWJX6040rUakxhKhv6J+kC/iz7Q76In6MViUdyi9QRNbe0ayJwWrSdomgk/CNrLKNHM
        +ImOVmdMs1Gwg8AiOysaGfusaPUmMnZKdiCsBv11lGhbU6FtVzikXmhtFiw428ao1hI3fxUaT2GseOgY
        9UIj7ZwsOB4QIVZpKjTfwUPkJVmgkV0B2fF4/PpvXmmCx4pxyKX5XjZoRPa20BguVZOyQyObaDBWZWzi
        mEMh0H2JrRaFQCMSm4XGajn4C4NGXYmNa6UVCo1YXQsd3biMUTg0Ip4tOPFe8kxsFmgAfeNChi8hbZKY
        +DEV5WVo1JXYxs52DpFL1JF5G1ISNKIr8uA1nnVbJUOjGhPbkLJAE98+sUXuyFKVBRqRQHxiq/EXS5QN
        GvkTECxqR5airNCoK7FVtyPLDY38UdN3JWRuhUD7xJYa23YCU629XwQ00sFD6fa0SyHQtlOrsV5nh2ZV
        ddgwZ0s6RdmhlcRKJi8mnr6cSe9qibNCq1yVPD8DEk8jpyiveI/LBm3juOSGg57A9gVUDu91WaBtiYr8
        se8VAeyPs7JAa5cVvclgBe398a6h6gBsV4+QDM2N5dZR5Yn7smLEKobktjy3q0r0AaMkaAajnVXkxoJ7
        s8LA8TxCSBMMuI9ZD+x7/yRoxXHUj3peQPM8G6MeGkAmhs9iTJCflJehVQ54QGQcWzF4ubfk3ZvKIWCZ
        nST0EjQ35mGYd51IeUBc/JUxTIa2JyR2ANESoO0B1AxN1WRoXIwHEc9zSlXCdnrkEsXrlBCbBM3K8mBW
        eu42k2zs41kxzur7ZDWk0dDEDcCYTwxziMTpuz3VbxYj+0pzQ8VxX8H/SRoFrTjGlSLLk7wpemK/hban
        m+qCoqRnRVeFQWiViTkGgljhotC4Me7MIKZkxhQpb0Qnyl5oHfvM1WaqDmPRXV4ntI3j6FMQJhRgrXIR
        aOLYDqCERSfMB2hm3f4yUcqi9QBt3bqkRas3kf3PmhWa8Ok6yZhXTfMXXMn4eLfj56wAAAAASUVORK5C
        YII=
</value>
  </data>
</root>